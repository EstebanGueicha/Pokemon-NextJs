import Head from 'next/head'
import styles from '../styles/pages/Home.module.scss'
import pokemonService from '../services/pokemon'
import PokemonCard from '../components/PokemonCard'
import { useEffect, useState } from 'react'
import { withAuthSync } from '../services/withAuth'
import Layout from '../components/Layout'

const Home = ({ result }) => {
  const [pokemons, setPokemon] = useState(result)
  const [pokemonSearch, setPokemonSearch] = useState(null)
  const [value, setValue] = useState('')

  useEffect(() => {
    setPokemonSearch(pokemons)
  }, [pokemons])

  useEffect(() => {
    if (value.length % 2 === 0) {
      const newPokemons = { ...pokemons }
      const search = newPokemons.results.filter((p) => !p.name.search(value))
      newPokemons.results = search
      setPokemonSearch(newPokemons)
    }
  }, [value])

  const nextPokemons = async () => {
    try {
      const next = await pokemonService.getNextPokemonByUrl(pokemons.next)
      setPokemon(next)
    } catch (err) {
      console.log(err)
    }
  }

  const prevPokemons = async () => {
    try {
      const prev = await pokemonService.getPrevPokemonByUrl(pokemons.previous)
      setPokemon(prev)
    } catch (err) {
      console.log(err)
    }
  }

  return (
    <div className={styles.container}>
      <Head>
        <title>Pokemon Next</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <Layout>
        <div className={styles.navigation}>
          <button
            type="button"
            className="btn btn-primary"
            onClick={() => prevPokemons()}
            disabled={!pokemons.previous}
          >
            Anterior
          </button>

          <input
            type="text"
            placeholder="Busca tu pokemon favorito"
            className={styles.searchInput}
            value={value}
            onChange={(e) => setValue(e.target.value)}
          />

          <button
            type="button"
            className="btn btn-primary"
            onClick={() => nextPokemons()}
            disabled={!pokemons.next}
          >
            Siguiente
          </button>
        </div>
        <p className={styles.count}>Pokemones: {pokemons.results.length}</p>
        <div className={styles.main}>
          {pokemonSearch && pokemonSearch.results
            ? pokemonSearch.results.map((pokemon, index) => (
                <PokemonCard key={index} url={pokemon.url} />
              ))
            : null}
        </div>
      </Layout>
    </div>
  )
}

Home.getInitialProps = async () => {
  const result = await pokemonService.getPokemons()
  return { result }
}

export default withAuthSync(Home)
